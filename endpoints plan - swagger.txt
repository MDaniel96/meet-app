
===> Endpoints:

= = = (( Login ))

**POST /login/facebook/{accessToken}
 - logs in user after fb login (TODO)
 - if user not exists register
 - sends user token to backend
 - param: name, pass


**POST /login/test/{email}


= = = (( Search ))

**GET /user/current
 - returns logged in user

**GET /user/all
 - lists all users

**GET /user/search/{keyword}
 - returns whose name matches the keyword
 - if no keyword, returns all users
 - friends first

**GET /user/{id}
 - returns user by id


= = = (( Update User ))   

**PUT /user/location
 - updates user's location
 - body: Location

**PUT /user/settings
 - updates user's settings
 - body: Settings


= = = (( Friends ))

**GET /user/friend/all
 - returns all friends of user
 - sorted by distance

**DELETE /user/friend/{userId}
 - deletes friend 

**GET /user/friend/{userId}/status
 - checks friend status of user
 - returns: RequestStatus


= = = (( Friend Requests ))

**POST /user/friend/request/{toUserId}
 - adds new friend request

**GET /user/friend/request/all
 - gets all friend requests of user

**POST /user/friend/request/accept/{friendRequestId}
 - accepts and deletes specific friend request of user

**DELETE /user/friend/request/accept/{friendRequestId}
 - cancels and deletes specific friend request of user


= = = (( Locations ))

**DELETE /user/location/{userId}
 - deletes location request from user

**GET /user/location/{userId}/status
 - checks location status of user
    - deletes it if is timed out
 - returns: RequestStatus


= = = (( Location Requests ))

**POST /user/location/request/{toUserId}/{message}
 - adds new location request

**GET /user/location/request/all
 - gets all location requests of user

**POST /user/location/accept/{locationRequestId}
 - accepts and deletes specific location request of user

**DELETE /user/location/cancel/{locationRequestId}
 - cancels and deletes specific location request of user

= = = 


= = = (( Notifications == Nearby Friends))

GET /user/friend/notify
 - refreshes user's loc permissions
 - calculates distances from user's loc
 - returns those friends who we don't track with loc permission (or request) AND are within radius



===> Updating endpoints:
PUT /user/location
GET /user/notify

===> Status codes:

200: OK
400: Bad Request
401: Unauthorized
404: Not Found


===> Entitások:

*User:
 - email
 - name
 - location
 - settings
 - image
 - ?distance

*Request
 - fromUserName
 - fromUserId
 - time
 - toUserId

<-FriendRequest

<-LocationRequest


===> Osztályok:

Location:
 - lat
 - lon
 - time

Settings:
 - radius
 - notifications
 - travel_mode


RequestStatus:
 - accessed, not-accessed, on-the-way


===> Kapcsolatok

Friends:
 - fromUserId
 - toUserId
 - time

Locations:
 - fromUserId
 - toUserId
 - time

 